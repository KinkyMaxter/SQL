#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT count(orderID) FROM BIT_DB.JanSales
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> '';
    
#2. How many of those orders were for an iPhone? 
SELECT count(Product) FROM BIT_DB.JanSales
    WHERE Product='iPhone'
    AND length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> '';
    
#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT acctnum FROM BIT_DB.FebSales FS
    LEFT JOIN BIT_DB.customers C
    ON FS.orderID=C.order_id
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> '';
    
#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, price FROM BIT_DB.JanSales
    ORDER BY price ASC
    LIMIT 1;
    
#5. What is the total revenue for each product sold in January?
SELECT Product, SUM(quantity)*price AS Revenue FROM BIT_DB.JanSales
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> ''
    GROUP BY Product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(quantity), SUM(quantity)*price AS Revenue FROM BIT_DB.FebSales
    WHERE location='548 Lincoln St, Seattle, WA 98101'
    AND length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> ''
    GROUP BY Product;
    
#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT count(distinct C.acctnum), AVG(quantity*price) FROM BIT_DB.FebSales FS
    LEFT JOIN BIT_DB.customers C
    ON FS.orderID=C.order_id
    WHERE FS.quantity>2
    AND length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> '';
    
#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity) FROM BIT_DB.FebSales 
    WHERE location like '%Los Angeles%'
    AND length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> ''
    GROUP BY Product;
    
#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT distinct location, count(orderID) FROM BIT_DB.JanSales
    WHERE location LIKE '%NY%'
    AND length(orderID) = 6 
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> ''
    GROUP BY location
    HAVING count(orderID)>2;

#10. How many of each type of headphone were sold in February?
SELECT SUM(Quantity) as quantity, Product FROM BIT_DB.FebSales 
    WHERE Product like '%Headphones%'
    AND length(orderID) = 6 
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> ''
    GROUP BY Product;

#11. What was the average amount spent per account in February?
SELECT SUM(quantity*price)/count(C.acctnum) AS 'Avg Spent/Acct' FROM BIT_DB.FebSales FS
    LEFT JOIN BIT_DB.customers C
    ON FS.orderID=C.order_id
    WHERE length(orderID) = 6 
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> '';

#12. What was the average quantity of products purchased per account in February?
SELECT SUM(quantity)/count(C.acctnum) FROM BIT_DB.FebSales FS
    LEFT JOIN BIT_DB.customers C
    ON FS.orderID=C.order_id
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> '';

#13. Which product brought in the most revenue in January and how much revenue did it bring in total? 
SELECT Product, SUM(quantity*price) AS 'Total Revenue' FROM BIT_DB.JanSales
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID'
    AND orderID IS NOT NULL
    AND orderID <> ''
    GROUP BY Product
    ORDER BY SUM(quantity*price) DESC LIMIT 1;
